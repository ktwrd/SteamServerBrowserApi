name: Build Application

on:
  push:
    branches: [ main ]
    tags: "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build
        run: dotnet build SteamServerBrowserApi --no-incremental --nologo --configuration Release

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        runtime:
          - "win-x64"
          - "win-arm64"
          - "linux-x64"
          - "linux-arm"
          - "linux-arm64"
          - "linux-musl-x64"
          - "linux-musl-arm"
          - "linux-musl-arm64"
          - "osx-x64"
          - "osx-arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Build ${{ matrix.runtime }}
        run: dotnet publish SteamServerBrowserApi --configuration Release -p:PublishSingleFile=true -p:ReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true -p:CopyOutputSymbolsToPublishDirectory=false --self-contained --runtime ${{ matrix.runtime }} --output dist
      
      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          name: SteamServerBrowserApi-${{matrix.runtime}}
          path: dist

  docker:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Environment Variables
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "CONTAINER_VERSION=$(git describe --tags --abbrev=0).$([[ $GITHUB_REF = refs/tags/* ]] && echo 0 || echo 65534)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date --iso-8601=s)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish DEV Image
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: docker/build-push-action@v5
        with:
          # linux/arm64 builds are disabled due to funky errors
          platforms: linux/amd64
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/ktwrd/steam-server-browser-api:dev
            ghcr.io/ktwrd/steam-server-browser-api:dev-${{ env.CONTAINER_VERSION }}
          # tags: |
          #   ktwrd/steam-server-browser-api:dev
          #   ktwrd/steam-server-browser-api:dev-${{ env.CONTAINER_VERSION }}
          #   ghcr.io/ktwrd/steam-server-browser-api:dev
          #   ghcr.io/ktwrd/steam-server-browser-api:dev-${{ env.CONTAINER_VERSION }}

      - name: Build & Publish LATEST Image
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          # linux/arm64 builds are disabled due to funky errors
          platforms: linux/amd64
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/ktwrd/steam-server-browser-api:latest
            ghcr.io/ktwrd/steam-server-browser-api:dev
            ghcr.io/ktwrd/steam-server-browser-api:${{ env.CONTAINER_VERSION }}
            ghcr.io/ktwrd/steam-server-browser-api:${{ env.TAG }}
          # tags: |
          #   ktwrd/steam-server-browser-api:latest
          #   ktwrd/steam-server-browser-api:dev
          #   ktwrd/steam-server-browser-api:${{ env.CONTAINER_VERSION }}
          #   ktwrd/steam-server-browser-api:${{ env.TAG }}
          #   ghcr.io/steam-server-browser-api:latest
          #   ghcr.io/steam-server-browser-api:dev
          #   ghcr.io/steam-server-browser-api:${{ env.CONTAINER_VERSION }}
          #   ghcr.io/steam-server-browser-api:${{ env.TAG }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [publish, docker]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      actions: read
      contents: write # required to create a release
    strategy:
      matrix:
        runtime:
          - "win-x64"
          - "win-arm64"
          - "linux-x64"
          - "linux-arm"
          - "linux-arm64"
          - "linux-musl-x64"
          - "linux-musl-arm"
          - "linux-musl-arm64"
          - "osx-x64"
          - "osx-arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Environment Variables
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "VERSION=$(git describe --tags --abbrev=0).$([[ $GITHUB_REF = refs/tags/* ]] && echo 0 || echo 65534)+$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Download ${{ matrix.runtime }} Binaries
        uses: actions/download-artifact@v4
        with:
          name: SteamServerBrowserApi-${{ matrix.runtime }}
          path: dist/${{ matrix.runtime }}
      - name: Zip ${{ matrix.runtime }} Binaries
        run: |
          cd dist/${{ matrix.runtime }}
          if [ -f "SteamServerBrowserApi" ]; then
            chmod +x SteamServerBrowserApi
          fi
          zip -r ../../SteamServerBrowserApi-${{ env.TAG }}-${{ matrix.runtime }}.zip .
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            SteamServerBrowserApi-${{ env.TAG }}-${{ matrix.runtime }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}